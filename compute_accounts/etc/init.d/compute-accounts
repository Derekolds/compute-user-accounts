#!/bin/sh
# Copyright 2015 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

### BEGIN INIT INFO
# Provides:          computeaccounts
# X-Start-Before:    ssh
# Required-Start:    $local_fs $network $named $syslog
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Compute Accounts Daemon
# Description:       Enable Google Compute Accounts on this VM.
### END INIT INFO

NAME="Compute Accounts Daemon"
DAEMON="/usr/share/google/compute_accounts/proxy_daemon.py"
ACCOUNT="compute_accounts"
RUN_DIR="/var/run/compute_accounts"
LOG_DIR="/var/log/compute_accounts"
PID_FILE="${RUN_DIR}/pid"

get_pid() {
  cat "${PID_FILE}"
}

is_running() {
  [ -f "${PID_FILE}" ] && ps $(get_pid) 2>&1 > /dev/null
}

start_daemon() {
  if is_running; then
    echo "Already started"
    return
  fi
  echo "Starting ${NAME}..."
  if [ ! -d "${RUN_DIR}" ]; then
    mkdir ${RUN_DIR}
    chown ${ACCOUNT}:${ACCOUNT} ${RUN_DIR}
  fi
  if [ ! -d "${LOG_DIR}" ]; then
    mkdir ${LOG_DIR}
    chown ${ACCOUNT}:${ACCOUNT} ${LOG_DIR}
    chmod 750 ${LOG_DIR}
  fi
  ${DAEMON} ${@}
  for i in $(seq 1 10); do
    if is_running; then
      echo "Done"
      return
    fi
    sleep 1
  done
  echo "Unable to start"
  exit 1
}

stop_daemon() {
  if ! is_running; then
    echo "Not running"
    return
  fi
  echo "Stopping ${NAME}..."
  kill $(get_pid)
  for i in $(seq 1 10); do
    if ! is_running; then
      echo "Stopped"
      return
    fi
    sleep 1
  done
  echo "Failed to stop"
  exit 1
}

daemon_status() {
  if is_running; then
    echo "Running"
  else
    echo "Stopped"
    exit 1
  fi
}

case "${1}" in
  start)
    shift
    start_daemon ${@}
    ;;
  stop)
    stop_daemon
    ;;
  restart)
    stop_daemon
    start_daemon
    ;;
  status)
    daemon_status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac
